Objetivo
la siguiente practica muestra como se pueden comunicar multiples procesos usando la idea de un conjunto de automatas, para 
los cuales cada estado esto es un procesos y usa tuberias para comunicarse, se parte de un archivo de configuracion en 
formato YAML

Requisitos
el programa se probo bajo 2 distribuciones de linux

en fedora 16:

GCC >= 4.7.2.
YAML >=  0.2
Glib >= 2.0
make >= 3.82

en ubuntu 13.04:

GCC >= 4.7.3.
YAML >=  0.2
Glib >= 2.0
make >= 3.81


bibliotecas utilizadas

yaml.h
stdio.h
stdlib.h
glib.h
string.h
signal.h
unistd.h
string.h
pthread.h
semaphore.h



Tutoriales que fueron utiles

http://www.csc.villanova.edu/~mdamian/threads/posixsem.html

http://www.chuidiang.com/clinux/herramientas/makefile.php

http://rpmfind.net/linux/RPM/fedora/19/x86_64/y/yaml-cpp-devel-0.3.0-3.fc19.x86_64.html

sobre yaml y su parser
http://wpsoftware.net/andrew/pages/libyaml.html

como compilar glib
https://developer.gnome.org/glib/2.30/glib-compiling.html

manejo de files con stdio
http://icecube.wisc.edu/~dglo/c_class/stdio.html
http://www.cplusplus.com/reference/cstdio/fscanf/

manejo de headers
http://stackoverflow.com/questions/7109964/creating-your-own-header-file-in-c

gslists
https://developer.gnome.org/gtk-tutorial/2.22/x2055.html

pipes
http://systemadmin.es/2010/05/como-funcionan-las-llamadas-al-sistema-dup-open-close
http://www.tldp.org/LDP/lpg/node11.html

procesos
http://www.csl.mtu.edu/cs4411.ck/www/NOTES/process/fork/create.html

malloc
http://chuwiki.chuidiang.org/index.php?title=Arrays_en_C

grupos de procesos
http://support.sas.com/documentation/onlinedoc/sasc/doc/lr2/setpgid.htm

la pagina que me mostro como estaba creando zombies O_o
http://www.webmasterworld.com/forum40/1032.htm

lectura con tama√±o desconocido
http://stackoverflow.com/questions/16870485/how-can-i-read-a-an-input-string-of-unknown-length

hilos
http://www.yolinux.com/TUTORIALS/LinuxTutorialPosixThreads.html
